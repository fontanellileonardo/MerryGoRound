//
// Generated file, do not edit! Created by nedtool 5.4 from Ctrl_M.msg.
//

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#ifndef __CTRL_M_M_H
#define __CTRL_M_M_H

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0504
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



/**
 * Class generated from <tt>Ctrl_M.msg:2</tt> by nedtool.
 * <pre>
 * message Ctrl_M
 * {
 *     int chil_num;
 *     int enjoyed;
 * }
 * </pre>
 */
class Ctrl_M : public ::omnetpp::cMessage
{
  protected:
    int chil_num;
    int enjoyed;

  private:
    void copy(const Ctrl_M& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const Ctrl_M&);

  public:
    Ctrl_M(const char *name=nullptr, short kind=0);
    Ctrl_M(const Ctrl_M& other);
    virtual ~Ctrl_M();
    Ctrl_M& operator=(const Ctrl_M& other);
    virtual Ctrl_M *dup() const override {return new Ctrl_M(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual int getChil_num() const;
    virtual void setChil_num(int chil_num);
    virtual int getEnjoyed() const;
    virtual void setEnjoyed(int enjoyed);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const Ctrl_M& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, Ctrl_M& obj) {obj.parsimUnpack(b);}


#endif // ifndef __CTRL_M_M_H

